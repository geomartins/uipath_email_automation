<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="684,940" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/credentials" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Security</x:String>
      <x:String>CredentialManagement</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>CredentialManagement</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="+Step1:   Click on &quot;Manage Packages&quot; -&gt; Official -&gt; Search for &quot;Credentials -&gt; UiPath.Credentials.Activities -&gt; Install &amp; Save&#xA;&#xA;+ Step2:  Go to windows -&gt;search &quot;Credential Manager&quot; -&gt; Window Credential -&gt; Add Generic Credentials &#xD;&#xA;  ++ Internet  ----- &quot;EmailCredential&quot;&#xD;&#xA;        Username ---- &quot;martinsabiodun94@gmail.com&quot;&#xD;&#xA;        Password ---- &quot;******&quot;&#xD;&#xA;&#xD;&#xA;+Step3: Drag and Drop &quot;Get Secure Credentials&quot; Activities to your sequence and make the Target Field your Generic Credential Name&#xA;&#xA;+ Step4: Inside the &quot;Get Secure Credentials&quot; Properties Panel,  Navigate to &#xD;&#xA;  ++  Input Section&#xD;&#xA;          Target ------- &quot;EmailCredential&quot;  &#xD;&#xA;          &#xD;&#xA;  ++  Ouput section&#xD;&#xA;          Password  ---- {EmailPassword}   (String)&#xD;&#xA;          Username  -----{ EmailUsername}  (String)&#xD;&#xA;&#xD;&#xA;+ Step5: Drag and Drop &quot;Get Imap Mail Messages&quot; Activity to your sequence&#xD;&#xA;&#xD;&#xA;+ Step 6: Inside &quot;Get Imap Mail Messages&quot; Property Panel,  Navigate to&#xD;&#xA;  ++ Host Section &#xA;         MailFolder ----- &quot;Inbox&quot;&#xD;&#xA;         Port --------- 993&#xD;&#xA;          Server ------- &quot;imap.gmail.com&quot;&#xD;&#xA;&#xD;&#xA;   ++ Logon Section&#xD;&#xA;          Email -------- {EmailUsername}&#xD;&#xA;          SecurePassword ---- {EmailPassword}&#xD;&#xA;&#xD;&#xA;   ++ Output Section&#xD;&#xA;           Messages  ----- {EmailMessages}               (List&lt;MailMessage&gt;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;+ Step 7:  Drag &amp; Drop &quot;ForEach&quot; Actiivity&#xD;&#xA;&#xD;&#xA;+ Step 8: Inside the &quot;ForEach&quot; Activity Property Panel, Navigate to&#xD;&#xA;&#xD;&#xA;    ++ Misc Section&#xD;&#xA;           TypeArgument ---- System.Net.Mail.Message&#xD;&#xA;           Value ----- {EmailMessages}&#xD;&#xA;&#xD;&#xA;+ Step 9: Drag &amp; Drop &quot;Log Message&quot; Activity in the body of the &quot;ForEach Activity&quot;&#xD;&#xA;&#xD;&#xA;+ Step 10: Inside the &quot;Log Message&quot; Property Panel, Navigate to&#xD;&#xA;    &#xD;&#xA;    ++ Log Section&#xD;&#xA;           Message ----- {Item.Subject}     (String)&#xD;&#xA;&#xD;&#xA;+ Step 11:  Drag &amp; Drop &quot;IF&quot; Activity in the body of the &quot;ForEach&quot; Activity&#xD;&#xA;&#xD;&#xA;+ Step 12: Inside the &quot;IF&quot; Activity Property Panel, Navigate to&#xD;&#xA;&#xD;&#xA;    ++ Misc Section&#xD;&#xA;          Condition  -------  {Item.Subject.Contain(&quot;Test&quot;)}    (Bool)&#xD;&#xA;&#xD;&#xA;+ Step 13: Drag &amp; Drop &quot;Save Attachment&quot; Activity in the body of the &quot;IF&quot; Activity&#xD;&#xA;&#xD;&#xA;+ Step 14: Inside the &quot;Save Attcachment&quot; Activity Property Panel, Navigate to&#xD;&#xA;&#xD;&#xA;   ++ Input Section&#xD;&#xA;         FolderPath ------ &quot;attachments/&quot;+Item.Subject      (String)&#xD;&#xA;         Message ---- {Item}  (MailMessage)&#xD;&#xA;         &#xD;&#xA;           &#xD;&#xA;&#xD;&#xA;  " sap:VirtualizedContainerService.HintSize="242,1868" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ss:SecureString" Name="EmailPassword" />
      <Variable x:TypeArguments="x:String" Name="EmailUsername" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="EmailMessages" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:GetSecureCredential CredentialType="Generic" DisplayName="Get Secure Credentials" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="GetSecureCredential_1" PersistanceType="Enterprise" Target="EmailCredential">
      <p:GetSecureCredential.Password>
        <OutArgument x:TypeArguments="ss:SecureString">
          <mca:CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">EmailPassword</mca:CSharpReference>
        </OutArgument>
      </p:GetSecureCredential.Password>
      <p:GetSecureCredential.Username>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">EmailUsername</mca:CSharpReference>
        </OutArgument>
      </p:GetSecureCredential.Username>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:GetSecureCredential>
    <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" FilterExpression="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_1" MailFolder="Inbox" MarkAsRead="False" OnlyUnreadMessages="True" OrderByDate="NewestFirst" Port="993" SecureConnection="Auto" Server="imap.gmail.com" Top="30">
      <ui:GetIMAPMailMessages.Email>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">EmailUsername</mca:CSharpValue>
        </InArgument>
      </ui:GetIMAPMailMessages.Email>
      <ui:GetIMAPMailMessages.Messages>
        <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
          <mca:CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">EmailMessages</mca:CSharpReference>
        </OutArgument>
      </ui:GetIMAPMailMessages.Messages>
      <ui:GetIMAPMailMessages.SecurePassword>
        <InArgument x:TypeArguments="ss:SecureString">
          <mca:CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">EmailPassword</mca:CSharpValue>
        </InArgument>
      </ui:GetIMAPMailMessages.SecurePassword>
    </ui:GetIMAPMailMessages>
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="Item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,591" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_1">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">Item.Subject</mca:CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <If sap:VirtualizedContainerService.HintSize="484,368" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">Item.Subject.Contains("Test")</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,181" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" OverwriteExisting="False">
                    <ui:SaveMailAttachments.FolderPath>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">"attachments/"+Item.Subject</mca:CSharpValue>
                      </InArgument>
                    </ui:SaveMailAttachments.FolderPath>
                    <ui:SaveMailAttachments.Message>
                      <InArgument x:TypeArguments="snm:MailMessage">
                        <mca:CSharpValue x:TypeArguments="snm:MailMessage" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">Item</mca:CSharpValue>
                      </InArgument>
                    </ui:SaveMailAttachments.Message>
                  </ui:SaveMailAttachments>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">EmailMessages</mca:CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>